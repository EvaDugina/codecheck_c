{
    "enabled": true,
    "show_to_student": false,
    "tools": {
        "valgrind": {
            "bin": "valgrind",
            "compiler": "gcc",
            "checks": [
                {
                    "check": "errors",
                    "limit": 0,
                    "reject": true
                },
                {
                    "check": "leaks",
                    "limit": 0,
                    "reject": true
                }
            ]
        },
        "cppcheck": {
            "bin": "cppcheck",
            "checks": [
                {
                    "check": "error",
                    "limit": 0,
                    "reject": false
                },
                {
                    "check": "warning",
                    "limit": 3,
                    "reject": false
                },
                {
                    "check": "style",
                    "limit": 3,
                    "reject": false
                },
                {
                    "check": "performance",
                    "limit": 2,
                    "reject": false
                },
                {
                    "check": "portability",
                    "limit": 0,
                    "reject": false
                },
                {
                    "check": "information",
                    "limit": 0,
                    "reject": false
                },
                {
                    "check": "unusedFunction",
                    "limit": 0,
                    "reject": false
                },
                {
                    "check": "missingInclude",
                    "limit": 0,
                    "reject": false
                }
            ]
        },
        "clang-format": {
            "bin": "clang-format",
            "check": {
                "name": "strict",
                ".comment": "can be diffrent checks, such as strict, less, minimal and so on",
                "file": ".clang-format",
                "limit": 5,
                "reject": true
            }
        },
        "copydetect": {
            "bin": "copydetect",
            "check": {
                "type": "with_all",
                ".comment1": "can be diffrent types, such as with same group/subgroup",
                "limit": 50,
                ".comment2": "limit is maximum match percentage",
                "reject": true
            }
        }
    }
}